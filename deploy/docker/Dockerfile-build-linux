#
# QGroundControl linux build environment
#

FROM ubuntu:20.04
LABEL authors="Daniel Agar <daniel@agar.ca>, Patrick Jos√© Pereira <patrickelectric@gmail.com>"

ARG QT_VERSION=5.15.2

ENV DEBIAN_FRONTEND noninteractive

ENV DISPLAY :99

ENV QMAKESPEC linux-g++-64

ENV QT_PATH /opt/Qt
ENV QT_DESKTOP $QT_PATH/${QT_VERSION}/gcc_64

ENV PATH /usr/lib/ccache:$QT_DESKTOP/bin:$PATH

RUN apt-get update && apt-get -y --quiet --no-install-recommends install \
		apt-utils \
		binutils \
		build-essential \
		ca-certificates \
		ccache \
		checkinstall \
		curl \
		espeak \
		fuse \
		g++ \
		gcc \
		git \
		gosu \
		kmod \
		libespeak-dev \
		libfontconfig1 \
		libfuse2 \
		libgstreamer-plugins-base1.0-dev \
		libgstreamer1.0-0 \
		libgstreamer1.0-dev \
		libsdl2-dev \
		libssl-dev \
		libudev-dev \
		locales \
		make \
		ninja-build \
		openssh-client \
		openssl \
		patchelf \
		pkg-config \
		pgp \
		python3 \
		python3-pip \
		rsync \
		speech-dispatcher \
		wget \
		xvfb \
		zlib1g-dev \
		fuse \
		libfuse-dev \
		libdirectfb-dev \
	&& apt-get -y autoremove \
	&& apt-get clean autoclean \
	&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*

RUN	wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
	&& echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null \
	&& apt-get update \
	&& apt-get install -y cmake \
	&& apt-get -y autoremove \
	&& apt-get clean autoclean \
	&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*

# Install Qt
COPY deploy/docker/install-qt-linux.sh /tmp/qt/
RUN /tmp/qt/install-qt-linux.sh

# Install python packages
RUN /usr/bin/pip3 install jsonschema jinja2 pyyaml ecdsa pyelftools

# Reconfigure locale
RUN locale-gen en_US.UTF-8 && dpkg-reconfigure locales

# create user with id 1000 to not run commands/generate files as root
RUN useradd user --create-home --home-dir /home/user --shell /bin/bash --uid 1000
USER user

WORKDIR /project/build
CMD cmake /project/source && make -j$(nproc)
